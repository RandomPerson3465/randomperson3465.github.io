const INT32_LIMIT=2147483647,workspace=document.querySelector(".workspace"),quickSelectButton=document.querySelector("#quickSelect"),selectMenu=document.querySelector("#objectSelect"),objectMenu=document.querySelector("#objectMenu"),controlMenu=document.querySelector("#objectControls"),fileImport=document.querySelector("#fileImport");function clamp(e,t=Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER){return isNaN(e)&&(e=0),e<t?t:e>i?i:e}function abb(e){let t=Math.sign(e);return(e=Math.abs(e))<1?0:t*Math.floor(e/10**(Math.floor(Math.log10(e))-2))*10**(Math.floor(Math.log10(e))-2)}function random(e=0,t=1){return parseFloat(e)+Math.random()*(parseFloat(t)-parseFloat(e))||0}function randomGaussian(e,t){let i=0,r=0;for(;!i;)i=Math.random();for(;!r;)r=Math.random();return Math.sqrt(-2*Math.log(i))*Math.cos(2*Math.PI*r)*parseFloat(t)+parseFloat(e)}function randomFromCustomDistribution(e){if("object"!=typeof e||!e.entries||!e.entries.length||!e.totalWeight||e.totalWeight<0)return 0;const t=Math.random()*e.totalWeight;let i=0;for(;t>e.entries[i]?.cutoff&&e.entries[i];)i++;return random(e.entries[i].min,e.entries[i].max)}function createCustomDistribution(e){const t={totalWeight:0,entries:[]};let r=0;const o=e.split("\n");for(i=0;i<o.length;i++){const e=o[i].split(",");r+=parseFloat(e[2])||0;const s={min:parseFloat(e[0])||0,max:parseFloat(e[1])||0,cutoff:r};t.entries.push(s),t.totalWeight=r}return t}function updateMenu(e){const t=objectMenu.querySelectorAll("input,textarea,select"),r=e.menus[Object.keys(e.menus)[e.currentPage]];for(i=0;i<t.length;i++)"file"!==r[i].type&&("checkbox"===r[i].type?t[i].checked=e.properties[r[i].id]:t[i].value=e.properties[r[i].id],r[i].condition&&(e.properties[r[i].condition]!==r[i].conditionalValue?(t[i].parentElement.style.display="none",t[i].parentElement.nextElementSibling.style.display="none"):(t[i].parentElement.style.display="inline",t[i].parentElement.nextElementSibling.style.display="inline")))}String.prototype.hexEncode=function(){let e,t="";for(i=0;i<this.length;i++)e=this.charCodeAt(i).toString(16),t+=("000"+e).slice(-4);return t},String.prototype.hexDecode=function(){let e=this.match(/.{1,4}/g)||[],t="";for(i=0;i<e.length;i++)t+=String.fromCharCode(parseInt(e[i],16));return t};class BaseObject{constructor(e,t){this.properties={type:"BaseObject",x:0,y:30,width:100,height:100,draggable:!0,resizable:!0,lockAspectRatio:!1,centerx:!1,centery:!1,visible:!0,opacity:100,layer:0,name:e,round:!1},this.deleted=!1,this.HTMLElement=t,this.dragBox=null,this.aspectRatio=0===this.properties.height?1:this.properties.width/this.properties.height,this.currentPage=0,this.controls=[{states:["delete"],titles:["Delete"],state:0,activeState:-1,function:()=>{deleteCurrentObject()}},{states:["content_copy"],titles:["Duplicate"],state:0,activeState:-1,title:"Duplicate",function:()=>{const e=prompt("Name of copy:");if(e){if(getObjectByName(e))return alert("An object already exists with that name.");const t=createObjectFromType(document.querySelector("#newObjectSelect").value,e);t&&(configureNewObject(t,this.properties),generateSelect(e),Odometer.init()),alert("Object successfully duplicated")}}},{id:"visible",titles:["Show object","Hide object"],states:["visibility","visibility_off"],state:0,activeState:-1},{id:"round",titles:["Make object circular","Make object rectangular"],states:["circle","square"],state:0,activeState:-1},{id:"draggable",states:["drag_pan","drag_pan"],titles:["Enable dragging","Disable dragging"],state:0,activeState:1},{id:"resizable",states:["resize","resize"],titles:["Enable resizing","Disable resizing"],state:0,activeState:1},{id:"lockAspectRatio",states:["aspect_ratio","aspect_ratio"],titles:["Lock aspect ratio","Unlock aspect ratio"],state:0,activeState:1},{id:"centerx",states:["align_horizontal_center","align_horizontal_center"],titles:["Horizontally center object","Horizontally uncenter object"],state:0,activeState:1},{id:"centery",states:["align_vertical_center","align_vertical_center"],titles:["Vertically center object","Vertically uncenter object"],state:0,activeState:1}],this.menus={"Positioning and Size":[{id:"x",labelLeft:"X",labelRight:"px",type:"number"},{id:"y",labelLeft:"Y",labelRight:"px",type:"number"},{id:"width",labelLeft:"Width",labelRight:"px",type:"number"},{id:"height",labelLeft:"Height",labelRight:"px",type:"number"},{id:"layer",labelLeft:"Layer",type:"number"}],Styles:[{id:"opacity",labelLeft:"Opacity",labelRight:"%",type:"number"}]},this.styleMappings={x:"left",y:"top",width:"width",height:"height",visible:"visibility",opacity:"opacity",layer:"z-index",round:"border-radius"},this.styleModifiers={opacity:.01,visibility:["visible","hidden"],cursor:["move","default"],"border-radius":["50%","0%"]}}center(){this.HTMLElement&&(this.properties.centerx&&(this.properties.x=(window.innerWidth-this.HTMLElement.offsetWidth)/2),this.properties.centery&&(this.properties.y=(window.innerHeight-this.HTMLElement.offsetHeight)/2))}updateStyles(){this.dragBox&&(this.dragBox.style.width=this.properties.width,this.dragBox.style.height=this.properties.resizable?this.properties.height-10:this.properties.height,this.properties.draggable?this.dragBox.style.cursor="move":this.dragBox.style.cursor="default"),this.center();for(const e of Object.keys(this.styleMappings)){let t=this.styleMappings[e],i=this.properties[e];this.styleModifiers[t]&&("number"==typeof this.styleModifiers[t]&&(i*=this.styleModifiers[t]),this.styleModifiers[t]instanceof Array&&(i=i?this.styleModifiers[t][0]:this.styleModifiers[t][1])),this.HTMLElement.style[t]=i}this.properties.height>0&&!this.properties.lockAspectRatio&&(this.aspectRatio=this.properties.width/this.properties.height),this.properties.resizable?this.properties.lockAspectRatio?this.aspectRatio<1?this.HTMLElement.style.resize="horizontal":this.HTMLElement.style.resize="vertical":this.HTMLElement.style.resize="both":this.HTMLElement.style.resize="none"}instantiateBase(){const e=document.querySelector(".workspace"),t=document.createElement("div");t.className="lcedit-object",t.id="lcedit-"+this.properties.name.hexEncode();const i=document.createElement("div");i.style.width=this.properties.width,i.style.height=this.properties.height-10,i.className="dragbox",i.style.zIndex=2,t.appendChild(i),this.dragBox=i,this.HTMLElement=t,e.appendChild(t)}update(){this.updateStyles()}instantiate(){this.instantiateBase(),this.update()}}class Rectangle extends BaseObject{constructor(e,t){super(e,t),this.properties.type="Rectangle",this.properties.bgColor="#000000",this.menus.Styles=this.menus.Styles.concat([{id:"bgColor",labelLeft:"Background color",type:"color"}]),this.styleMappings.bgColor="backgroundColor"}}class Image extends BaseObject{constructor(e,t){super(e,t),this.properties.type="Image",this.properties.imageURL="",this.properties.imageFiles=[],this.menus.Image=[{id:"imageURL",labelLeft:"Image URL",type:"text"},{id:"imageFiles",labelLeft:"OR Image File",type:"file"}],this.instantiateImage=()=>{const e=document.createElement("img");this.HTMLElement.appendChild(e)},this.updateImage=()=>{if(this.properties.imageFiles[0]){const e=new FileReader;e.readAsDataURL(this.properties.imageFiles[0]),e.onload=()=>{this.properties.imageURL=e.result,this.HTMLElement.querySelector("img").src=this.properties.imageURL,this.properties.imageFiles=[]}}else this.HTMLElement.querySelector("img").src=this.properties.imageURL},this.update=()=>{this.updateStyles(),this.updateImage()},this.instantiate=()=>{this.instantiateBase(),this.instantiateImage(),this.update()}}}class Text extends BaseObject{constructor(e,t){super(e,t),this.properties.height=36,this.properties.width=200,this.properties.type="Text",this.properties.bgColor="#000000",this.properties.bgOpacity=0,this.properties.fontWeight=400,this.properties.text="Text",this.properties.textColor="#000000",this.properties.centertextx=!1,this.properties.centertexty=!1,this.properties.lockAspectRatio=!0,this.properties.scaleText=!0,this.properties.fontSize=24,this.properties.font="sans-serif",this.properties.padding=5,this.aspectRatio=0===this.properties.height?1:this.properties.width/this.properties.height,this.controls=this.controls.concat([{id:"centertextx",states:["format_align_center","format_align_center"],titles:["Horizontally center text","Horizontally uncenter text"],state:0,activeState:1},{id:"centertexty",states:["vertical_align_center","vertical_align_center"],titles:["Vertically center text","Vertically uncenter text"],state:0,activeState:1},{id:"scaleText",states:["format_shapes","format_shapes"],titles:["Enable text scaling with box","Disable text scaling with box"],state:0,activeState:1}]),this.menus.Styles=this.menus.Styles.concat([{id:"bgColor",labelLeft:"Background color",type:"color"},{id:"bgOpacity",labelLeft:"Background opacity",labelRight:"%",type:"number"},{id:"font",labelLeft:"Font",type:"select",options:[{value:"Arial",name:"Arial"},{value:"Bebas Neue",name:"Bebas Neue"},{value:"Lato",name:"Lato"},{value:"Montserrat",name:"Montserrat"},{value:"Open Sans",name:"Open Sans"},{value:"Roboto",name:"Roboto"},{value:"Roboto Mono",name:"Roboto Mono"},{value:"Roboto Slab",name:"Roboto Slab"},{value:"Ubuntu",name:"Ubuntu"},{value:"sans-serif",name:"Sans Serif"},{value:"serif",name:"Serif"}]},{id:"fontSize",labelLeft:"Font size",labelRight:"px",type:"number"},{id:"textColor",labelLeft:"Text color",type:"color"},{id:"fontWeight",labelLeft:"Font style",type:"select-number",options:[{value:300,name:"Light"},{value:400,name:"Normal"},{value:500,name:"Medium"},{value:600,name:"Semibold"},{value:700,name:"Bold"},{value:800,name:"Extrabold"}]},{id:"padding",labelLeft:"Padding",labelRight:"px",type:"number"}]),this.styleMappings.fontWeight="fontWeight",this.styleMappings.textColor="color",this.styleMappings.fontSize="fontSize",this.styleMappings.font="fontFamily",this.styleMappings.centertextx="justify-content",this.styleMappings.centertexty="align-items",this.styleModifiers["align-items"]=["center","normal"],this.styleModifiers["justify-content"]=["center","left"],this.textRatio=this.properties.fontSize/this.properties.height,this.paddingRatio=this.properties.padding/this.properties.height,this.instantiateText=(e=!1)=>{const t=document.createElement("div");t.className="bg",t.style.backgroundColor=this.properties.bgColor,t.style.opacity=this.properties.bgOpacity/100,t.style.width=this.properties.width,t.style.height=this.properties.height,t.style.zIndex=-1,this.HTMLElement.appendChild(t);const i=document.createElement("div");i.className=e?"odometer":"text",i.style.zIndex=1,i.style.padding=this.properties.padding,this.HTMLElement.appendChild(i),i.innerText=this.properties.text},this.updateTextStyles=()=>{const e=this.HTMLElement.querySelector(".bg"),t=this.HTMLElement.querySelector(".text")||this.HTMLElement.querySelector(".odometer");e.style.backgroundColor=this.properties.bgColor,e.style.opacity=this.properties.bgOpacity/100,e.style.width=this.properties.width,e.style.height=this.properties.height,t.style.padding=this.properties.padding,this.properties.height>0&&(this.textRatio=this.properties.fontSize/this.properties.height,this.paddingRatio=this.properties.padding/this.properties.height)},this.updateText=()=>{const e=this.HTMLElement.querySelector(".text")||this.HTMLElement.querySelector(".odometer");this.updateTextStyles(),e.innerText=this.properties.text},this.update=()=>{this.updateStyles(),this.updateText()},this.instantiate=()=>{this.instantiateBase(),this.instantiateText(),this.update()}}}class EditableText extends Text{constructor(e,t){super(e,t),this.properties.type="EditableText",this.menus.Styles=this.menus.Styles.concat([{id:"text",labelLeft:"Text",type:"textbox",placeholder:"Text"}])}}class Counter extends Text{constructor(e,t){super(e,t),this.properties.type="Counter",this.properties.text="0",this.properties.value=0,this.properties.updateInterval=2,this.properties.paused=!1,this.properties.min=Number.MIN_SAFE_INTEGER,this.properties.max=Number.MAX_SAFE_INTEGER,this.properties.odoTime=2,this.updater=0,this.oldInterval=2,this.properties.downColor="#ff0000",this.properties.upColor="#00ff00",this.properties.updateColors=!1,this.controls=this.controls.concat([{id:"paused",states:["pause","play_arrow"],titles:["Pause counter","Play counter"],state:0,activeState:-1},{id:"updateColors",states:["palette","palette"],titles:["Enable update colors","Disable update colors"],state:0,activeState:1}]),this.menus.Styles=this.menus.Styles.concat([{id:"upColor",labelLeft:"Odometer up color",type:"color"},{id:"downColor",labelLeft:"Odometer down color",type:"color"}]),this.menus.Counter=[{id:"updateInterval",labelLeft:"Update Interval",labelRight:"seconds",type:"number"},{id:"min",labelLeft:"Minimum value",type:"number"},{id:"max",labelLeft:"Maximum value",type:"number"},{id:"odoTime",labelLeft:"Odometer animation",labelRight:"seconds",type:"number"}],this.updateCounter=()=>{this.properties.updateInterval=clamp(this.properties.updateInterval,.02,2147483.647),this.properties.text=Math.round(clamp(this.properties.value,this.properties.min,this.properties.max)).toString(),this.updateText()},this.instantiateCounter=()=>{this.properties.paused||(this.updater=setInterval(this.updateCounter,clamp(1e3*this.properties.updateInterval,20,2147483647)),this.updateCounter())},this.updateOdo=()=>{if(this.deleted)return;this.properties.odoTime=clamp(this.properties.odoTime,.02,this.properties.updateInterval);let e=document.querySelector(`#style-${this.properties.name.hexEncode()}`);e||(e=document.createElement("style"),e.id=`style-${this.properties.name.hexEncode()}`,document.head.appendChild(e)),e.innerText=`#lcedit-${this.properties.name.hexEncode()} .odometer.odometer-auto-theme.odometer-animating-up .odometer-ribbon-inner,\n            .odometer.odometer-theme-default.odometer-animating-up .odometer-ribbon-inner {\n              -webkit-transition-duration: ${this.properties.odoTime}s !important;\n              -moz-transition-duration: ${this.properties.odoTime}s !important;\n              -ms-transition-duration: ${this.properties.odoTime}s !important;\n              -o-transition-duration: ${this.properties.odoTime}s !important;\n              transition-duration: ${this.properties.odoTime}s !important\n            }\n            \n            #lcedit-${this.properties.name.hexEncode()}  .odometer.odometer-auto-theme.odometer-animating-down.odometer-animating .odometer-ribbon-inner,\n            .odometer.odometer-theme-default.odometer-animating-down.odometer-animating .odometer-ribbon-inner {\n              -webkit-transition-duration: ${this.properties.odoTime}s !important;\n              -moz-transition-duration: ${this.properties.odoTime}s !important;\n              -ms-transition-duration: ${this.properties.odoTime}s !important;\n              -o-transition-duration: ${this.properties.odoTime}s !important;\n              transition-duration: ${this.properties.odoTime}s !important\n            }`,this.properties.updateColors&&(e.innerText+=`#lcedit-${this.properties.name.hexEncode()} .odometer.odometer-auto-theme.odometer-animating-up .odometer-ribbon-inner,\n            .odometer.odometer-theme-default.odometer-animating-up .odometer-ribbon-inner {\n                color: ${this.properties.upColor};\n            }\n            #lcedit-${this.properties.name.hexEncode()} .odometer.odometer-auto-theme.odometer-animating-up .odometer-formatting-mark,\n            .odometer.odometer-theme-default.odometer-animating-up .odometer-formatting-mark {\n                color: ${this.properties.upColor};\n            }\n            #lcedit-${this.properties.name.hexEncode()} .odometer.odometer-auto-theme.odometer-animating-down.odometer-animating .odometer-ribbon-inner,\n            .odometer.odometer-theme-default.odometer-animating-down.odometer-animating .odometer-ribbon-inner {\n                color: ${this.properties.downColor};\n            }\n            #lcedit-${this.properties.name.hexEncode()} .odometer.odometer-auto-theme.odometer-animating-down .odometer-formatting-mark,\n            .odometer.odometer-theme-default.odometer-animating-down .odometer-formatting-mark {\n                color: ${this.properties.downColor};\n            }`)},this.update=()=>{this.updateStyles(),this.updateTextStyles(),this.updateOdo(),!this.properties.paused&&this.oldInterval!==this.properties.updateInterval&&this.updater&&(clearInterval(this.updater),this.oldInterval=this.properties.updateInterval,this.updater=setInterval(this.updateCounter,clamp(1e3*this.properties.updateInterval,20,2147483647)),this.updateCounter()),this.properties.paused&&this.updater&&(clearInterval(this.updater),this.updater=0),this.properties.paused||this.updater||(this.updater=setInterval(this.updateCounter,clamp(1e3*this.properties.updateInterval,20,2147483647)),this.updateCounter())},this.instantiate=()=>{this.instantiateBase(),this.instantiateText(!0),this.instantiateCounter(),this.update()}}}class CustomCounter extends Counter{constructor(e,t){super(e,t),this.properties.type="CustomCounter",this.properties.abbreviated=!0,this.properties.min=0,this.properties.gainType=0,this.properties.minRate=0,this.properties.maxRate=0,this.properties.meanRate=0,this.properties.stdevRate=0,this.properties.customRate="",this.properties.gainPer=2,this.controls=this.controls.concat([{id:"abbreviated",states:["decimal_decrease","decimal_increase"],titles:["Abbreviate counter","Unabbreviate counter"],state:0,activeState:-1}]),this.menus.Counter=this.menus.Counter.concat([{id:"value",labelLeft:"Count",type:"number"}]),this.menus.Gain=[{id:"gainType",labelLeft:"Gain Type",type:"select-number",options:[{value:0,name:"Uniform (default)"},{value:1,name:"Gaussian"},{value:2,name:"Custom"}],updateMenu:!0},{id:"minRate",labelLeft:"Min Gain",type:"number",condition:"gainType",conditionalValue:0},{id:"maxRate",labelLeft:"Max Gain",type:"number",condition:"gainType",conditionalValue:0},{id:"meanRate",labelLeft:"Mean Gain",type:"number",condition:"gainType",conditionalValue:1},{id:"stdevRate",labelLeft:"Standard Deviation",type:"number",condition:"gainType",conditionalValue:1},{id:"customRate",labelLeft:"Custom Distribution",type:"textbox",condition:"gainType",conditionalValue:2,placeholder:"Min,Max,Weight\nNew line for each entry"},{id:"gainPer",labelLeft:"Per every",labelRight:"seconds",type:"number"}],this.customDistributionData={},this.updateCounter=()=>{this.properties.updateInterval=clamp(this.properties.updateInterval,.02,2147483.647),(this.properties.gainPer<.001||isNaN(this.properties.gainPer))&&(this.properties.gainPer=2),isNaN(this.properties.value)&&(this.properties.value=0);let e=0;const t=this.properties.updateInterval/this.properties.gainPer;switch(this.properties.gainType){case 0:e=random(this.properties.minRate,this.properties.maxRate)*t;break;case 1:e=randomGaussian(this.properties.meanRate,this.properties.stdevRate)*t;break;case 2:this.customDistributionData=createCustomDistribution(this.properties.customRate),e=randomFromCustomDistribution(this.customDistributionData)*t}if(this.properties.value=clamp(this.properties.value+e,this.properties.min,this.properties.max),this.properties.abbreviated?this.properties.text=Math.round(abb(this.properties.value)).toString():this.properties.text=Math.round(this.properties.value).toString(),this.updateText(),selectMenu.value===this.properties.name){const e=document.querySelector(".count-input");e&&(e.value=this.properties.value)}}}}class CompareCounter extends Counter{constructor(e,t){super(e,t),this.properties.type="CompareCounter",this.properties.min=-1/0,this.properties.max=1/0,this.properties.mode=0,this.properties.counterA="",this.properties.counterB="",this.controls=this.controls.concat([{states:["sync"],titles:["Sync update intervals"],state:0,activeState:-1,function:()=>{const e=getObjectByName(this.properties.counterA),t=getObjectByName(this.properties.counterB);e&&(e.properties.paused=!0,e.update(),e.properties.updateInterval=this.properties.updateInterval,e.properties.paused=!1,e.update()),t&&(t.properties.paused=!0,t.update(),t.properties.updateInterval=this.properties.updateInterval,t.properties.paused=!1,t.update()),this.properties.paused=!0,this.update(),this.properties.paused=!1,this.update()}}]),this.menus.Counter=[{id:"updateInterval",labelLeft:"Update Interval",labelRight:"seconds",type:"number"},{id:"odoTime",labelLeft:"Odometer animation",labelRight:"seconds",type:"number"},{id:"mode",labelLeft:"Mode",type:"select-number",options:[{value:0,name:"Absolute Difference"},{value:1,name:"A minus B"},{value:2,name:"B minus A"},{value:3,name:"Sum"},{value:4,name:"Product"},{value:5,name:"A divded by B"},{value:6,name:"B divided by A"}]},{id:"counterA",labelLeft:"Counter A",type:"select",options:getAllChannels(this.properties.name),updateMenu:!0,optionsFunction:getAllChannels},{id:"counterB",labelLeft:"Counter B",type:"select",options:getAllChannels(this.properties.name),updateMenu:!0,optionsFunction:getAllChannels}],this.updateCounter=()=>{const e=getObjectByName(this.properties.counterA),t=getObjectByName(this.properties.counterB);let i=0,r=0;e instanceof Counter&&(i=e.properties.abbreviated?abb(e.properties.value):Math.round(e.properties.value)),t instanceof Counter&&(r=t.properties.abbreviated?abb(t.properties.value):Math.round(t.properties.value));let o=0;switch(this.properties.mode){case 0:o=Math.abs(i-r);break;case 1:o=i-r;break;case 2:o=r-i;break;case 3:o=i+r;break;case 4:o=i*r;break;case 5:o=i/r;break;case 6:o=r/i}this.properties.value=o,isFinite(this.properties.value)?this.properties.text=Math.round(this.properties.value).toString():this.properties.text="Error",this.updateText()}}}function getAllChannels(e){const t=[{value:"",name:"Select a counter"}];for(const i of objectList)i instanceof Counter&&i.properties.name!==e&&t.push({value:i.properties.name,name:i.properties.name});return t}function toggleMenu(){const e=document.querySelector(".menu");"block"==e.style.display?e.style.display="none":e.style.display="block"}let objectList=[];function getObjectByName(e){return objectList.filter((t=>t.properties.name===e))[0]}function getObjectByElementId(e){if(e&&e.startsWith("lcedit-"))return getObjectByName(e.replace("lcedit-","").hexDecode())}function deleteCurrentObject(){if(confirm("Are you sure you want to delete this object?")){document.querySelector(".paginator").style.display="none",controlMenu.replaceChildren([]),objectMenu.replaceChildren([]);const e=getObjectByName(selectMenu.value);if(e){if(e instanceof Counter){clearInterval(e.updater);const t=objectList.filter((e=>e instanceof CompareCounter));for(i=0;i<t.length;i++)t[i].properties.counterA===e.properties.name&&(t[i].properties.counterA=""),t[i].properties.counterB===e.properties.name&&(t[i].properties.counterB="")}e.HTMLElement.remove()}objectList=objectList.filter((e=>e.properties.name!==selectMenu.value)),e.deleted=!0;let t=document.querySelector(`#style-${e.properties.name.hexEncode()}`);t&&t.remove(),generateSelect()}}function generateControls(e){if(e)for(controlMenu.replaceChildren([]),i=0;i<e.controls.length;i++){const t=e.controls[i];t.id&&(t.state=e.properties[t.id]?1:0);const r=document.createElement("button");r.className="control",r.setAttribute("title",t.titles[t.state]),t.state===t.activeState?r.className+=" active":r.className=r.className.replace(" active","");const o=document.createElement("span");o.className="material-symbols-outlined",o.innerText=t.states[t.state],r.appendChild(o),controlMenu.appendChild(r),r.addEventListener("click",(()=>{t.state=Math.min(t.state+1,(t.state+1)%t.states.length),t.state===t.activeState?r.className+=" active":r.className=r.className.replace(" active",""),t.id&&(e.properties[t.id]=!!t.state),t.function&&t.function(t.state),r.setAttribute("title",t.titles[t.state]),o.innerText=t.states[t.state],e.update()}))}}function generateMenu(e){if(!e)return;updatePage(e),generateControls(e),objectMenu.replaceChildren([]);const t=e.menus[Object.keys(e.menus)[e.currentPage]];for(const i of t){const t=document.createElement("span");switch(i.labelLeft&&(t.innerHTML+=i.labelLeft+" "),i.type){case"textbox":inputBox=document.createElement("textarea");break;case"select-number":case"select":inputBox=document.createElement("select"),i.optionsFunction&&(i.options=i.optionsFunction(e.properties.name));for(const e of i.options){const t=document.createElement("option");t.value=e.value,t.innerText=e.name,inputBox.appendChild(t)}break;default:inputBox=document.createElement("input")}if("value"===i.id&&(inputBox.className="count-input"),inputBox.setAttribute("type",i.type),i.placeholder&&inputBox.setAttribute("placeholder",i.placeholder),"file"===i.type&&inputBox.setAttribute("accept","image/png, image/jpeg"),inputBox.addEventListener("input",(t=>{if("number"===i.type||"select-number"===i.type){const r=Number(t.target.value)||0;e.properties[i.id]=r,e.properties.lockAspectRatio&&("width"===i.id&&(e.properties.height=r/e.aspectRatio),"height"===i.id&&(e.properties.width=r*e.aspectRatio,e instanceof Text&&(e.properties.fontSize=Math.round(e.textRatio*r),e.properties.padding=Math.round(e.paddingRatio*r))))}else"checkbox"===i.type?e.properties[i.id]=t.target.checked:"file"===i.type?e.properties[i.id]=t.target.files:e.properties[i.id]=t.target.value;e.update(),i.updateMenu&&updateMenu(e)})),t.appendChild(inputBox),i.labelRight){const e=document.createElement("span");e.innerText=" "+i.labelRight,t.appendChild(e)}objectMenu.appendChild(t),objectMenu.appendChild(document.createElement("br"))}updateMenu(e)}function updatePage(e){const t=e.currentPage,i=Object.keys(e.menus)[t],r=Object.keys(e.menus).length-1;document.querySelector(".paginator").style.display="flex",document.querySelector("#prevPage").style.visibility=0===t?"hidden":"visible",document.querySelector("#nextPage").style.visibility=t===r?"hidden":"visible",document.querySelector("#pageName").innerText=i}function prevPage(){const e=getObjectByName(selectMenu.value);e&&(e.currentPage=Math.max(0,e.currentPage-1),updatePage(e),generateMenu(e))}function nextPage(){const e=getObjectByName(selectMenu.value);e&&(e.currentPage=Math.min(Object.keys(e.menus).length-1,e.currentPage+1),updatePage(e),generateMenu(e))}function generateSelect(e){const t=selectMenu.value;selectMenu.replaceChildren([]);for(const e of objectList){const t=document.createElement("option");t.innerText=e.properties.name,t.value=e.properties.name,selectMenu.appendChild(t)}selectMenu.value=e||t,e&&getObjectByName(e)&&generateMenu(getObjectByName(e))}function dragElement(e){let t=0,i=0,r=0,o=0;const s=getObjectByElementId(e.id)||{};function n(n){(n=n||window.event).preventDefault(),t=r-n.clientX,i=o-n.clientY,r=n.clientX,o=n.clientY,s.properties.x=e.offsetLeft-t,s.properties.y=e.offsetTop-i,s.center(),selectMenu.value===s.properties.name&&updateMenu(s),e.style.top=s.properties.y+"px",e.style.left=s.properties.x+"px"}function a(){document.onmouseup=null,document.onmousemove=null}s.dragBox&&(s.dragBox.onmousedown=function(e){s.properties.draggable&&((e=e||window.event).preventDefault(),r=e.clientX,o=e.clientY,document.onmouseup=a,document.onmousemove=n)})}function updateDimensions(e){const t=e[0].target,i=getObjectByElementId(t.id);i&&(i.properties.lockAspectRatio?i.aspectRatio<1?(i.properties.width=parseInt(t.style.width),i.properties.height=parseInt(t.style.width)/i.aspectRatio):(i.properties.width=parseInt(t.style.height)*i.aspectRatio,i.properties.height=parseInt(t.style.height)):(i.properties.width=parseInt(t.style.width),i.properties.height=parseInt(t.style.height)),i instanceof Text&&i.properties.scaleText&&i.properties.height>0&&(i.properties.fontSize=Math.round(i.textRatio*i.properties.height),i.properties.padding=Math.round(i.paddingRatio*i.properties.height)),i.update(),selectMenu.value===i.properties.name&&updateMenu(i))}function createObjectFromType(e,t){switch(e){case"BaseObject":return new BaseObject(t);case"Rectangle":return new Rectangle(t);case"Image":return new Image(t);case"Text":return new Text(t);case"EditableText":return new EditableText(t);case"Counter":return new Counter(t);case"CustomCounter":return new CustomCounter(t);case"CompareCounter":return new CompareCounter(t);default:return null}}function configureNewObject(e,t){if(e){if(t)for(i=0;i<Object.keys(t).length;i++){const r=Object.keys(t)[i];"name"!==r&&("number"==typeof e.properties[r]&&isNaN(t[r])&&(t[r]=0),e.properties[r]=t[r])}e.instantiate(),objectList.push(e),dragElement(e.HTMLElement),new ResizeObserver(updateDimensions).observe(e.HTMLElement)}}function createNewObject(){let e=document.querySelector("#objectName").value;const t=document.querySelector(".warning-text");if(e=e.trim(),e)if(getObjectByName(e))t.innerText="An object already exists with that name.",t.style.display="block";else{t.style.display="none";const i=createObjectFromType(document.querySelector("#newObjectSelect").value,e);i&&(configureNewObject(i),generateSelect(e),Odometer.init())}else t.innerText="Please enter a name.",t.style.display="block";document.querySelector("#objectName").value=""}function objectSelected(e){if(e.target){let t=e.target;"dragbox"===e.target.className&&(t=t.parentElement);const i=getObjectByElementId(t.id);i&&(selectMenu.value=i.properties.name,generateMenu(i)),quickSelectButton.className=""}}function quickSelect(){"quickSelectActive"===quickSelectButton.className?(quickSelectButton.className="",workspace.removeEventListener("click",objectSelected,{once:!0})):(quickSelectButton.className="quickSelectActive",workspace.addEventListener("click",objectSelected,{once:!0}))}function generateJSON(){const e=objectList.map((e=>e.properties));return JSON.stringify({data:e,version:1,createdAt:Date.now()})}function exportAsJSON(){const e=document.createElement("a"),t=new Blob([generateJSON()],{type:"text/plain"});e.href=URL.createObjectURL(t),e.download="export.json",e.click()}function clearWorkspace(){const e=objectList.filter((e=>e instanceof Counter));for(i=0;i<e.length;i++)clearInterval(e[i].updater);objectList=[],workspace.replaceChildren([]),objectMenu.replaceChildren([]),controlMenu.replaceChildren([]),document.querySelector(".paginator").style.display="none";const t=document.querySelectorAll("style");for(i=0;i<t.length;i++)t[i].remove();generateSelect("")}function importFromJSON(e,t=!1){fileImport.value="";let i=!1;if(t&&(i=confirm("Are you sure? This will overwrite your current data.")),!t||i){if(clearWorkspace(),"string"==typeof e)try{e=JSON.parse(e)}catch(e){return alert("There was an error loading your file.")}if(!e||!e.data)return alert("There was an error loading your file.");for(const t of e.data){const e=createObjectFromType(t.type,t.name);e&&configureNewObject(e,t)}generateSelect(),Odometer.init()}}function confirmReset(){confirm("Are you sure you want to reset EVERYTHING? This CANNOT be undone unless you have a backup saved!")&&clearWorkspace()}function saveInBrowser(){localStorage.setItem("lcbeta",generateJSON())}window.onload=()=>{selectMenu.addEventListener("input",(e=>{generateMenu(getObjectByName(e.target.value))})),fileImport.addEventListener("change",(()=>{fileImport.files[0]&&fileImport.files[0].text().then((e=>{importFromJSON(e,!0)}))}));const e=localStorage.getItem("lcbeta");e&&importFromJSON(e),setInterval(saveInBrowser,1e4)},addEventListener("resize",(e=>{for(i=0;i<objectList.length;i++)objectList[i].updateStyles()}));